stages:
  - test
  - build
  - development
  - dev-qa
  - staging
  - production

variables:
  GCLOUD_SERVICE_KEY: "$ORG_GCLOUD_SERVICE_KEY"
  SONAR_PROJECT_KEY: 'listnr-web'
  SCA_IMAGE: 'gcr.io/sca-remarkably-mutual-dingo/docker-ci-kubernetes'

.only_dev: &only_dev
  only:
    - master
    - '/^feature\/.*/'
    - '/^bugfix\/.*/'
    - '/^devops\/.*/'

.only_prod: &only_prod
  only:
    - master
    - tags
    - '/^devops\/.*/'

.cache: &cache
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/

sonarqube-test:
  <<: *only_dev
  stage: test
  image: gcr.io/sca-remarkably-mutual-dingo/sca-node-sonarscanner
  allow_failure: true
  script:
    - node --version
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.sources=./src -Dsonar.gitlab.commit_sha=$CI_COMMIT_REF -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.project_id=$CI_PROJECT_ID -X

test:
  <<: *only_dev
  <<: *cache
  stage: test
  image: node:12.16.3-alpine
  allow_failure: true
  script:
    - node --version
    - npm install
    - npm run test

build_storybook:
  <<: *cache
  stage: build
  image: node:12.16.3-alpine
  only:
    refs:
      - master
      - /^feature\/.+/
    changes:
      - ".storybook/**/*.{js,jsx,json}"
      - "src/components/**/*.{js,jsx,json}"
      - "src/page-components/**/*.{js,jsx,json}"
      - "src/styles/**/*.{js,jsx,json}"
  script:
    - npm install
    - npm run storybook:build
  artifacts:
    paths:
      - storybook-static

storybook_publish:
  stage: development
  dependencies:
    - build_storybook
  image: $SCA_IMAGE
  only:
    refs:
      - master
      - /^feature\/.+/
    changes:
      - ".storybook/**/*.{js,jsx,json}"
      - "src/components/**/*.{js,jsx,json}"
      - "src/page-components/**/*.{js,jsx,json}"
      - "src/styles/**/*.{js,jsx,json}"
  before_script:
    - echo "$GCLOUD_SERVICE_KEY" > "$HOME/gcloud-service-key.json"
    - gcloud auth activate-service-account --key-file "$HOME/gcloud-service-key.json"
  script:
    - gsutil mb -l australia-southeast1 gs://sca-listnr-web-pages || true
    - gsutil -m rm gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG/** || true
    - gsutil -m cp -r storybook-static gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG/
    - gsutil -m acl -r ch -u AllUsers:R gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG
  environment:
    name: "storybook/$CI_COMMIT_REF_SLUG"
    url: "https://storage.googleapis.com/sca-listnr-web-pages/$CI_COMMIT_REF_SLUG/storybook-static/index.html"

.build_images: &build_template
  stage: build
  image: $SCA_IMAGE
  services:
    - docker:18-dind
  before_script:
    - echo "$GCLOUD_SERVICE_KEY" > "$HOME/gcloud-service-key.json"
    - gcloud auth activate-service-account --key-file "$HOME/gcloud-service-key.json"
    - gcloud auth configure-docker
  script:
    - envsubst < .env.tmpl > .env.local
    # - envsubst < .env.${DEPLOY_ENV}.tmpl > .env.${DEPLOY_ENV}
    - |
      if [ -f .env.${DEPLOY_ENV} ]; then
        echo ".env.$DEPLOY_ENV EXISTS"
        cat .env.$DEPLOY_ENV >> .env.local
      fi;
    - cat .env.local
    - docker build
        -f ./Dockerfile.slim
        --tag "$GCLOUD_CONTAINER_REGISTRY/listnr-web-$DEPLOY_ENV:$CI_COMMIT_SHA"
        . | while read line ; do echo "$(date)| $line"; done;
    - |
      docker push "$GCLOUD_CONTAINER_REGISTRY/listnr-web-$DEPLOY_ENV:$CI_COMMIT_SHA"

      if [ "$CI_COMMIT_REF_NAME" = "master" ]; then
          docker tag "$GCLOUD_CONTAINER_REGISTRY/listnr-web-$DEPLOY_ENV:$CI_COMMIT_SHA" "$GCLOUD_CONTAINER_REGISTRY/listnr-web-$DEPLOY_ENV:latest"
          docker push "$GCLOUD_CONTAINER_REGISTRY/listnr-web-$DEPLOY_ENV:latest"
      fi


build_dev:
  <<: *build_template
  <<: *only_dev
  stage: build
  variables:
    DEPLOY_ENV: "dev"
  environment:
    name: "development/$CI_COMMIT_REF_SLUG"

build_stg:
  <<: *build_template
  <<: *only_prod
  stage: build
  when: manual
  variables:
    DEPLOY_ENV: "stg"
  environment:
    name: "staging"

build_prod:
  <<: *build_template
  <<: *only_prod
  stage: build
  variables:
    DEPLOY_ENV: "prod"
  environment:
    name: "production"

.deploy_template: &deploy_template
  image:
    name: $SCA_IMAGE
  before_script:
    - echo "$GCLOUD_SERVICE_KEY" > "$HOME/gcloud-service-key.json"
    - gcloud auth activate-service-account --key-file "$HOME/gcloud-service-key.json"
    - gcloud container clusters get-credentials "$CLOUDSDK_CONTAINER_CLUSTER"
    - helm dependency build chart/
    - export CDN_ENABLED=$([ "$CI_COMMIT_REF_SLUG" == "master" ] && echo "true" || echo "false")
    - envsubst < .gitlab/common.tmpl.yaml > .gitlab/common.yaml
    - envsubst < .gitlab/$DEPLOY_ENV.tmpl.yaml > .gitlab/values.yaml
    - LISTNR=listnr-web-$CI_COMMIT_REF_SLUG
    - |
      if [ ${#LISTNR} -gt 50 ]; then
          LISTNR_CHART=${LISTNR:0:50}-e
      else
          LISTNR_CHART=$LISTNR
      fi;
    - echo $LISTNR_CHART
  script:
    - helm upgrade --install --debug --wait --force --tiller-namespace sca-infra --namespace sca-listnr-web -f .gitlab/common.yaml -f .gitlab/values.yaml "$LISTNR_CHART" chart/

.stop_template: &stop_template
  image:
    name: $SCA_IMAGE
  when: manual
  before_script:
    - echo "$GCLOUD_SERVICE_KEY" > "$HOME/gcloud-service-key.json"
    - gcloud auth activate-service-account --key-file "$HOME/gcloud-service-key.json"
    - gcloud container clusters get-credentials "$CLOUDSDK_CONTAINER_CLUSTER"
    - LISTNR=listnr-web-$CI_COMMIT_REF_SLUG
    - |
      if [ ${#LISTNR} -gt 50 ]; then
          LISTNR_CHART=${LISTNR:0:50}-e
      else
          LISTNR_CHART=$LISTNR
      fi;
    - echo $LISTNR_CHART

  script:
    - helm delete --purge --tiller-namespace sca-infra "$LISTNR_CHART"
    - export FOLDEREXIST=$(gsutil ls gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG 2>&1)
    - echo $FOLDEREXIST
    - |
      if [[ "$FOLDEREXIST" == *"CommandException"* ]]; then
        echo "No need to remove the storage folder, gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG not exist."
      else
        gsutil -m rm -r gs://sca-listnr-web-pages/$CI_COMMIT_REF_SLUG 2>&1
      fi;

cypress_test:
  stage: dev-qa
  dependencies:
    - deploy_development
  allow_failure: true
  image: cypress/browsers:node12.18.3-chrome87-ff82
  cache:
    key:
      files:
        - package.json
    paths:
      - ~/.npm
  script:
    - npm cache verify
    - npm install
    - BASE_URL=https://$CI_COMMIT_REF_SLUG.listnr.dev.scadigital.com.au GCLOUD_PROJECT="$PROJECT_ID" CYPRESS_TEST_UID="67MHNxfaKYQq5aPIPV2rXSYbAJR2"  npm run e2e:smoke
  artifacts:
    paths:
      - cypress/screenshots
      - cypress/videos
    expire_in: '3 days'
  only:
    - master

deploy_development:
  <<: *deploy_template
  <<: *only_dev
  stage: development
  variables:
    DEPLOY_ENV: "dev"
    CLOUDSDK_CORE_PROJECT: "$DEV_CLOUDSDK_CORE_PROJECT"
    CLOUDSDK_COMPUTE_ZONE: "$DEV_CLOUDSDK_COMPUTE_ZONE"
    CLOUDSDK_CONTAINER_CLUSTER: "$DEV_CLOUDSDK_CONTAINER_CLUSTER"
  environment:
    name: "review/$CI_COMMIT_REF_NAME"
    url: "https://$CI_COMMIT_REF_SLUG.listnr.dev.scadigital.com.au"
    on_stop: stop_development
  after_script:
    - |
      if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then
        kubectl scale deployment/master-listnr-web --replicas=3 -n sca-listnr-web
      fi

deploy_staging:
  <<: *deploy_template
  <<: *only_prod
  stage: staging
  variables:
    DEPLOY_ENV: "stg"
    CLOUDSDK_CORE_PROJECT: "$STG_CLOUDSDK_CORE_PROJECT"
    CLOUDSDK_COMPUTE_ZONE: "$STG_CLOUDSDK_COMPUTE_ZONE"
    CLOUDSDK_CONTAINER_CLUSTER: "$STG_CLOUDSDK_CONTAINER_CLUSTER"
  when: manual

deploy_production:
  <<: *deploy_template
  <<: *only_prod
  stage: production
  variables:
    DEPLOY_ENV: "prod"
    CLOUDSDK_CORE_PROJECT: "$PROD_PCONE_CLOUDSDK_CORE_PROJECT"
    CLOUDSDK_COMPUTE_ZONE: "$PROD_PCONE_CLOUDSDK_COMPUTE_ZONE"
    CLOUDSDK_CONTAINER_CLUSTER: "$PROD_PCONE_CLOUDSDK_CONTAINER_CLUSTER"
  when: manual
  allow_failure: false

stop_development:
  <<: *stop_template
  stage: development
  variables:
    CLOUDSDK_CORE_PROJECT: "$DEV_CLOUDSDK_CORE_PROJECT"
    CLOUDSDK_COMPUTE_ZONE: "$DEV_CLOUDSDK_COMPUTE_ZONE"
    CLOUDSDK_CONTAINER_CLUSTER: "$DEV_CLOUDSDK_CONTAINER_CLUSTER"
    GIT_STRATEGY: none
  environment:
    name: "review/$CI_COMMIT_REF_NAME"
    action: stop

